
a.out:     file format elf32-i386


Disassembly of section .interp:

08048134 <.interp>:
 8048134:	2f                   	das    
 8048135:	6c                   	ins    BYTE PTR es:[edi],dx
 8048136:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 804813d:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 8048144:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.ABI-tag:

08048148 <.note.ABI-tag>:
 8048148:	04 00                	add    al,0x0
 804814a:	00 00                	add    BYTE PTR [eax],al
 804814c:	10 00                	adc    BYTE PTR [eax],al
 804814e:	00 00                	add    BYTE PTR [eax],al
 8048150:	01 00                	add    DWORD PTR [eax],eax
 8048152:	00 00                	add    BYTE PTR [eax],al
 8048154:	47                   	inc    edi
 8048155:	4e                   	dec    esi
 8048156:	55                   	push   ebp
 8048157:	00 00                	add    BYTE PTR [eax],al
 8048159:	00 00                	add    BYTE PTR [eax],al
 804815b:	00 02                	add    BYTE PTR [edx],al
 804815d:	00 00                	add    BYTE PTR [eax],al
 804815f:	00 06                	add    BYTE PTR [esi],al
 8048161:	00 00                	add    BYTE PTR [eax],al
 8048163:	00 20                	add    BYTE PTR [eax],ah
 8048165:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .note.gnu.build-id:

08048168 <.note.gnu.build-id>:
 8048168:	04 00                	add    al,0x0
 804816a:	00 00                	add    BYTE PTR [eax],al
 804816c:	14 00                	adc    al,0x0
 804816e:	00 00                	add    BYTE PTR [eax],al
 8048170:	03 00                	add    eax,DWORD PTR [eax]
 8048172:	00 00                	add    BYTE PTR [eax],al
 8048174:	47                   	inc    edi
 8048175:	4e                   	dec    esi
 8048176:	55                   	push   ebp
 8048177:	00 9e 23 03 70 21    	add    BYTE PTR [esi+0x21700323],bl
 804817d:	c5 01                	lds    eax,FWORD PTR [ecx]
 804817f:	8e 2a                	mov    gs,WORD PTR [edx]
 8048181:	7f a3                	jg     8048126 <_init-0x14e>
 8048183:	b5 b4                	mov    ch,0xb4
 8048185:	3d 03 48 69 4d       	cmp    eax,0x4d694803
 804818a:	65                   	gs
 804818b:	57                   	push   edi

Disassembly of section .gnu.hash:

0804818c <.gnu.hash>:
 804818c:	02 00                	add    al,BYTE PTR [eax]
 804818e:	00 00                	add    BYTE PTR [eax],al
 8048190:	03 00                	add    eax,DWORD PTR [eax]
 8048192:	00 00                	add    BYTE PTR [eax],al
 8048194:	01 00                	add    DWORD PTR [eax],eax
 8048196:	00 00                	add    BYTE PTR [eax],al
 8048198:	05 00 00 00 00       	add    eax,0x0
 804819d:	20 00                	and    BYTE PTR [eax],al
 804819f:	20 00                	and    BYTE PTR [eax],al
 80481a1:	00 00                	add    BYTE PTR [eax],al
 80481a3:	00 03                	add    BYTE PTR [ebx],al
 80481a5:	00 00                	add    BYTE PTR [eax],al
 80481a7:	00                   	.byte 0x0
 80481a8:	ad                   	lods   eax,DWORD PTR ds:[esi]
 80481a9:	4b                   	dec    ebx
 80481aa:	e3 c0                	jecxz  804816c <_init-0x108>

Disassembly of section .dynsym:

080481ac <.dynsym>:
	...
 80481bc:	2c 00                	sub    al,0x0
	...
 80481c6:	00 00                	add    BYTE PTR [eax],al
 80481c8:	20 00                	and    BYTE PTR [eax],al
 80481ca:	00 00                	add    BYTE PTR [eax],al
 80481cc:	1a 00                	sbb    al,BYTE PTR [eax]
	...
 80481d6:	00 00                	add    BYTE PTR [eax],al
 80481d8:	12 00                	adc    al,BYTE PTR [eax]
 80481da:	00 00                	add    BYTE PTR [eax],al
 80481dc:	0b 00                	or     eax,DWORD PTR [eax]
 80481de:	00 00                	add    BYTE PTR [eax],al
 80481e0:	7c 84                	jl     8048166 <_init-0x10e>
 80481e2:	04 08                	add    al,0x8
 80481e4:	04 00                	add    al,0x0
 80481e6:	00 00                	add    BYTE PTR [eax],al
 80481e8:	11 00                	adc    DWORD PTR [eax],eax
 80481ea:	0f                   	.byte 0xf
	...

Disassembly of section .dynstr:

080481ec <.dynstr>:
 80481ec:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 80481f0:	63 2e                	arpl   WORD PTR [esi],bp
 80481f2:	73 6f                	jae    8048263 <_init-0x11>
 80481f4:	2e 36 00 5f 49       	cs add BYTE PTR cs:ss:[edi+0x49],bl
 80481f9:	4f                   	dec    edi
 80481fa:	5f                   	pop    edi
 80481fb:	73 74                	jae    8048271 <_init-0x3>
 80481fd:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 8048204:	64 
 8048205:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 8048208:	6c                   	ins    BYTE PTR es:[edi],dx
 8048209:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 8048210:	72 74                	jb     8048286 <_init+0x12>
 8048212:	5f                   	pop    edi
 8048213:	6d                   	ins    DWORD PTR es:[edi],dx
 8048214:	61                   	popa   
 8048215:	69 6e 00 5f 5f 67 6d 	imul   ebp,DWORD PTR [esi+0x0],0x6d675f5f
 804821c:	6f                   	outs   dx,DWORD PTR ds:[esi]
 804821d:	6e                   	outs   dx,BYTE PTR ds:[esi]
 804821e:	5f                   	pop    edi
 804821f:	73 74                	jae    8048295 <_init+0x21>
 8048221:	61                   	popa   
 8048222:	72 74                	jb     8048298 <_init+0x24>
 8048224:	5f                   	pop    edi
 8048225:	5f                   	pop    edi
 8048226:	00 47 4c             	add    BYTE PTR [edi+0x4c],al
 8048229:	49                   	dec    ecx
 804822a:	42                   	inc    edx
 804822b:	43                   	inc    ebx
 804822c:	5f                   	pop    edi
 804822d:	32 2e                	xor    ch,BYTE PTR [esi]
 804822f:	30 00                	xor    BYTE PTR [eax],al

Disassembly of section .gnu.version:

08048232 <.gnu.version>:
 8048232:	00 00                	add    BYTE PTR [eax],al
 8048234:	00 00                	add    BYTE PTR [eax],al
 8048236:	02 00                	add    al,BYTE PTR [eax]
 8048238:	01 00                	add    DWORD PTR [eax],eax

Disassembly of section .gnu.version_r:

0804823c <.gnu.version_r>:
 804823c:	01 00                	add    DWORD PTR [eax],eax
 804823e:	01 00                	add    DWORD PTR [eax],eax
 8048240:	01 00                	add    DWORD PTR [eax],eax
 8048242:	00 00                	add    BYTE PTR [eax],al
 8048244:	10 00                	adc    BYTE PTR [eax],al
 8048246:	00 00                	add    BYTE PTR [eax],al
 8048248:	00 00                	add    BYTE PTR [eax],al
 804824a:	00 00                	add    BYTE PTR [eax],al
 804824c:	10 69 69             	adc    BYTE PTR [ecx+0x69],ch
 804824f:	0d 00 00 02 00       	or     eax,0x20000
 8048254:	3b 00                	cmp    eax,DWORD PTR [eax]
 8048256:	00 00                	add    BYTE PTR [eax],al
 8048258:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

0804825c <.rel.dyn>:
 804825c:	78 96                	js     80481f4 <_init-0x80>
 804825e:	04 08                	add    al,0x8
 8048260:	06                   	push   es
 8048261:	01 00                	add    DWORD PTR [eax],eax
	...

Disassembly of section .rel.plt:

08048264 <.rel.plt>:
 8048264:	88 96 04 08 07 01    	mov    BYTE PTR [esi+0x1070804],dl
 804826a:	00 00                	add    BYTE PTR [eax],al
 804826c:	8c 96 04 08 07 02    	mov    WORD PTR [esi+0x2070804],ss
	...

Disassembly of section .init:

08048274 <_init>:
 8048274:	53                   	push   ebx
 8048275:	83 ec 08             	sub    esp,0x8
 8048278:	e8 83 00 00 00       	call   8048300 <__x86.get_pc_thunk.bx>
 804827d:	81 c3 ff 13 00 00    	add    ebx,0x13ff
 8048283:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 8048289:	85 c0                	test   eax,eax
 804828b:	74 05                	je     8048292 <_init+0x1e>
 804828d:	e8 1e 00 00 00       	call   80482b0 <__gmon_start__@plt>
 8048292:	83 c4 08             	add    esp,0x8
 8048295:	5b                   	pop    ebx
 8048296:	c3                   	ret    

Disassembly of section .plt:

080482a0 <__gmon_start__@plt-0x10>:
 80482a0:	ff 35 80 96 04 08    	push   DWORD PTR ds:0x8049680
 80482a6:	ff 25 84 96 04 08    	jmp    DWORD PTR ds:0x8049684
 80482ac:	00 00                	add    BYTE PTR [eax],al
	...

080482b0 <__gmon_start__@plt>:
 80482b0:	ff 25 88 96 04 08    	jmp    DWORD PTR ds:0x8049688
 80482b6:	68 00 00 00 00       	push   0x0
 80482bb:	e9 e0 ff ff ff       	jmp    80482a0 <_init+0x2c>

080482c0 <__libc_start_main@plt>:
 80482c0:	ff 25 8c 96 04 08    	jmp    DWORD PTR ds:0x804968c
 80482c6:	68 08 00 00 00       	push   0x8
 80482cb:	e9 d0 ff ff ff       	jmp    80482a0 <_init+0x2c>

Disassembly of section .text:

080482d0 <_start>:
 80482d0:	31 ed                	xor    ebp,ebp
 80482d2:	5e                   	pop    esi
 80482d3:	89 e1                	mov    ecx,esp
 80482d5:	83 e4 f0             	and    esp,0xfffffff0
 80482d8:	50                   	push   eax
 80482d9:	54                   	push   esp
 80482da:	52                   	push   edx
 80482db:	68 60 84 04 08       	push   0x8048460
 80482e0:	68 f0 83 04 08       	push   0x80483f0
 80482e5:	51                   	push   ecx
 80482e6:	56                   	push   esi
 80482e7:	68 d7 83 04 08       	push   0x80483d7
 80482ec:	e8 cf ff ff ff       	call   80482c0 <__libc_start_main@plt>
 80482f1:	f4                   	hlt    
 80482f2:	66 90                	xchg   ax,ax
 80482f4:	66 90                	xchg   ax,ax
 80482f6:	66 90                	xchg   ax,ax
 80482f8:	66 90                	xchg   ax,ax
 80482fa:	66 90                	xchg   ax,ax
 80482fc:	66 90                	xchg   ax,ax
 80482fe:	66 90                	xchg   ax,ax

08048300 <__x86.get_pc_thunk.bx>:
 8048300:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 8048303:	c3                   	ret    
 8048304:	66 90                	xchg   ax,ax
 8048306:	66 90                	xchg   ax,ax
 8048308:	66 90                	xchg   ax,ax
 804830a:	66 90                	xchg   ax,ax
 804830c:	66 90                	xchg   ax,ax
 804830e:	66 90                	xchg   ax,ax

08048310 <deregister_tm_clones>:
 8048310:	b8 9b 96 04 08       	mov    eax,0x804969b
 8048315:	2d 98 96 04 08       	sub    eax,0x8049698
 804831a:	83 f8 06             	cmp    eax,0x6
 804831d:	77 01                	ja     8048320 <deregister_tm_clones+0x10>
 804831f:	c3                   	ret    
 8048320:	b8 00 00 00 00       	mov    eax,0x0
 8048325:	85 c0                	test   eax,eax
 8048327:	74 f6                	je     804831f <deregister_tm_clones+0xf>
 8048329:	55                   	push   ebp
 804832a:	89 e5                	mov    ebp,esp
 804832c:	83 ec 18             	sub    esp,0x18
 804832f:	c7 04 24 98 96 04 08 	mov    DWORD PTR [esp],0x8049698
 8048336:	ff d0                	call   eax
 8048338:	c9                   	leave  
 8048339:	c3                   	ret    
 804833a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

08048340 <register_tm_clones>:
 8048340:	b8 98 96 04 08       	mov    eax,0x8049698
 8048345:	2d 98 96 04 08       	sub    eax,0x8049698
 804834a:	c1 f8 02             	sar    eax,0x2
 804834d:	89 c2                	mov    edx,eax
 804834f:	c1 ea 1f             	shr    edx,0x1f
 8048352:	01 d0                	add    eax,edx
 8048354:	d1 f8                	sar    eax,1
 8048356:	75 01                	jne    8048359 <register_tm_clones+0x19>
 8048358:	c3                   	ret    
 8048359:	ba 00 00 00 00       	mov    edx,0x0
 804835e:	85 d2                	test   edx,edx
 8048360:	74 f6                	je     8048358 <register_tm_clones+0x18>
 8048362:	55                   	push   ebp
 8048363:	89 e5                	mov    ebp,esp
 8048365:	83 ec 18             	sub    esp,0x18
 8048368:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804836c:	c7 04 24 98 96 04 08 	mov    DWORD PTR [esp],0x8049698
 8048373:	ff d2                	call   edx
 8048375:	c9                   	leave  
 8048376:	c3                   	ret    
 8048377:	89 f6                	mov    esi,esi
 8048379:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

08048380 <__do_global_dtors_aux>:
 8048380:	80 3d 98 96 04 08 00 	cmp    BYTE PTR ds:0x8049698,0x0
 8048387:	75 13                	jne    804839c <__do_global_dtors_aux+0x1c>
 8048389:	55                   	push   ebp
 804838a:	89 e5                	mov    ebp,esp
 804838c:	83 ec 08             	sub    esp,0x8
 804838f:	e8 7c ff ff ff       	call   8048310 <deregister_tm_clones>
 8048394:	c6 05 98 96 04 08 01 	mov    BYTE PTR ds:0x8049698,0x1
 804839b:	c9                   	leave  
 804839c:	f3 c3                	repz ret 
 804839e:	66 90                	xchg   ax,ax

080483a0 <frame_dummy>:
 80483a0:	a1 8c 95 04 08       	mov    eax,ds:0x804958c
 80483a5:	85 c0                	test   eax,eax
 80483a7:	74 1f                	je     80483c8 <frame_dummy+0x28>
 80483a9:	b8 00 00 00 00       	mov    eax,0x0
 80483ae:	85 c0                	test   eax,eax
 80483b0:	74 16                	je     80483c8 <frame_dummy+0x28>
 80483b2:	55                   	push   ebp
 80483b3:	89 e5                	mov    ebp,esp
 80483b5:	83 ec 18             	sub    esp,0x18
 80483b8:	c7 04 24 8c 95 04 08 	mov    DWORD PTR [esp],0x804958c
 80483bf:	ff d0                	call   eax
 80483c1:	c9                   	leave  
 80483c2:	e9 79 ff ff ff       	jmp    8048340 <register_tm_clones>
 80483c7:	90                   	nop
 80483c8:	e9 73 ff ff ff       	jmp    8048340 <register_tm_clones>

080483cd <sub>:
 80483cd:	55                   	push   ebp
 80483ce:	89 e5                	mov    ebp,esp
 80483d0:	b8 ef be 00 00       	mov    eax,0xbeef
 80483d5:	5d                   	pop    ebp
 80483d6:	c3                   	ret    

080483d7 <main>:
 80483d7:	55                   	push   ebp
 80483d8:	89 e5                	mov    ebp,esp
 80483da:	e8 ee ff ff ff       	call   80483cd <sub>
 80483df:	b8 0d f0 00 00       	mov    eax,0xf00d
 80483e4:	5d                   	pop    ebp
 80483e5:	c3                   	ret    
 80483e6:	66 90                	xchg   ax,ax
 80483e8:	66 90                	xchg   ax,ax
 80483ea:	66 90                	xchg   ax,ax
 80483ec:	66 90                	xchg   ax,ax
 80483ee:	66 90                	xchg   ax,ax

080483f0 <__libc_csu_init>:
 80483f0:	55                   	push   ebp
 80483f1:	57                   	push   edi
 80483f2:	31 ff                	xor    edi,edi
 80483f4:	56                   	push   esi
 80483f5:	53                   	push   ebx
 80483f6:	e8 05 ff ff ff       	call   8048300 <__x86.get_pc_thunk.bx>
 80483fb:	81 c3 81 12 00 00    	add    ebx,0x1281
 8048401:	83 ec 1c             	sub    esp,0x1c
 8048404:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
 8048408:	8d b3 0c ff ff ff    	lea    esi,[ebx-0xf4]
 804840e:	e8 61 fe ff ff       	call   8048274 <_init>
 8048413:	8d 83 08 ff ff ff    	lea    eax,[ebx-0xf8]
 8048419:	29 c6                	sub    esi,eax
 804841b:	c1 fe 02             	sar    esi,0x2
 804841e:	85 f6                	test   esi,esi
 8048420:	74 27                	je     8048449 <__libc_csu_init+0x59>
 8048422:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 8048428:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
 804842c:	89 2c 24             	mov    DWORD PTR [esp],ebp
 804842f:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 8048433:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
 8048437:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804843b:	ff 94 bb 08 ff ff ff 	call   DWORD PTR [ebx+edi*4-0xf8]
 8048442:	83 c7 01             	add    edi,0x1
 8048445:	39 f7                	cmp    edi,esi
 8048447:	75 df                	jne    8048428 <__libc_csu_init+0x38>
 8048449:	83 c4 1c             	add    esp,0x1c
 804844c:	5b                   	pop    ebx
 804844d:	5e                   	pop    esi
 804844e:	5f                   	pop    edi
 804844f:	5d                   	pop    ebp
 8048450:	c3                   	ret    
 8048451:	eb 0d                	jmp    8048460 <__libc_csu_fini>
 8048453:	90                   	nop
 8048454:	90                   	nop
 8048455:	90                   	nop
 8048456:	90                   	nop
 8048457:	90                   	nop
 8048458:	90                   	nop
 8048459:	90                   	nop
 804845a:	90                   	nop
 804845b:	90                   	nop
 804845c:	90                   	nop
 804845d:	90                   	nop
 804845e:	90                   	nop
 804845f:	90                   	nop

08048460 <__libc_csu_fini>:
 8048460:	f3 c3                	repz ret 

Disassembly of section .fini:

08048464 <_fini>:
 8048464:	53                   	push   ebx
 8048465:	83 ec 08             	sub    esp,0x8
 8048468:	e8 93 fe ff ff       	call   8048300 <__x86.get_pc_thunk.bx>
 804846d:	81 c3 0f 12 00 00    	add    ebx,0x120f
 8048473:	83 c4 08             	add    esp,0x8
 8048476:	5b                   	pop    ebx
 8048477:	c3                   	ret    

Disassembly of section .rodata:

08048478 <_fp_hw>:
 8048478:	03 00                	add    eax,DWORD PTR [eax]
	...

0804847c <_IO_stdin_used>:
 804847c:	01 00                	add    DWORD PTR [eax],eax
 804847e:	02 00                	add    al,BYTE PTR [eax]

Disassembly of section .eh_frame_hdr:

08048480 <.eh_frame_hdr>:
 8048480:	01 1b                	add    DWORD PTR [ebx],ebx
 8048482:	03 3b                	add    edi,DWORD PTR [ebx]
 8048484:	30 00                	xor    BYTE PTR [eax],al
 8048486:	00 00                	add    BYTE PTR [eax],al
 8048488:	05 00 00 00 20       	add    eax,0x20000000
 804848d:	fe                   	(bad)  
 804848e:	ff                   	(bad)  
 804848f:	ff 4c 00 00          	dec    DWORD PTR [eax+eax*1+0x0]
 8048493:	00 4d ff             	add    BYTE PTR [ebp-0x1],cl
 8048496:	ff                   	(bad)  
 8048497:	ff 70 00             	push   DWORD PTR [eax+0x0]
 804849a:	00 00                	add    BYTE PTR [eax],al
 804849c:	57                   	push   edi
 804849d:	ff                   	(bad)  
 804849e:	ff                   	(bad)  
 804849f:	ff 90 00 00 00 70    	call   DWORD PTR [eax+0x70000000]
 80484a5:	ff                   	(bad)  
 80484a6:	ff                   	(bad)  
 80484a7:	ff b0 00 00 00 e0    	push   DWORD PTR [eax-0x20000000]
 80484ad:	ff                   	(bad)  
 80484ae:	ff                   	(bad)  
 80484af:	ff ec                	jmp    <internal disassembler error>
 80484b1:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .eh_frame:

080484b4 <__FRAME_END__-0xcc>:
 80484b4:	14 00                	adc    al,0x0
 80484b6:	00 00                	add    BYTE PTR [eax],al
 80484b8:	00 00                	add    BYTE PTR [eax],al
 80484ba:	00 00                	add    BYTE PTR [eax],al
 80484bc:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
 80484bf:	00 01                	add    BYTE PTR [ecx],al
 80484c1:	7c 08                	jl     80484cb <_IO_stdin_used+0x4f>
 80484c3:	01 1b                	add    DWORD PTR [ebx],ebx
 80484c5:	0c 04                	or     al,0x4
 80484c7:	04 88                	add    al,0x88
 80484c9:	01 00                	add    DWORD PTR [eax],eax
 80484cb:	00 20                	add    BYTE PTR [eax],ah
 80484cd:	00 00                	add    BYTE PTR [eax],al
 80484cf:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 80484d2:	00 00                	add    BYTE PTR [eax],al
 80484d4:	cc                   	int3   
 80484d5:	fd                   	std    
 80484d6:	ff                   	(bad)  
 80484d7:	ff 30                	push   DWORD PTR [eax]
 80484d9:	00 00                	add    BYTE PTR [eax],al
 80484db:	00 00                	add    BYTE PTR [eax],al
 80484dd:	0e                   	push   cs
 80484de:	08 46 0e             	or     BYTE PTR [esi+0xe],al
 80484e1:	0c 4a                	or     al,0x4a
 80484e3:	0f 0b                	ud2    
 80484e5:	74 04                	je     80484eb <_IO_stdin_used+0x6f>
 80484e7:	78 00                	js     80484e9 <_IO_stdin_used+0x6d>
 80484e9:	3f                   	aas    
 80484ea:	1a 3b                	sbb    bh,BYTE PTR [ebx]
 80484ec:	2a 32                	sub    dh,BYTE PTR [edx]
 80484ee:	24 22                	and    al,0x22
 80484f0:	1c 00                	sbb    al,0x0
 80484f2:	00 00                	add    BYTE PTR [eax],al
 80484f4:	40                   	inc    eax
 80484f5:	00 00                	add    BYTE PTR [eax],al
 80484f7:	00 d5                	add    ch,dl
 80484f9:	fe                   	(bad)  
 80484fa:	ff                   	(bad)  
 80484fb:	ff 0a                	dec    DWORD PTR [edx]
 80484fd:	00 00                	add    BYTE PTR [eax],al
 80484ff:	00 00                	add    BYTE PTR [eax],al
 8048501:	41                   	inc    ecx
 8048502:	0e                   	push   cs
 8048503:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 8048509:	46                   	inc    esi
 804850a:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
 804850d:	04 00                	add    al,0x0
 804850f:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 8048512:	00 00                	add    BYTE PTR [eax],al
 8048514:	60                   	pusha  
 8048515:	00 00                	add    BYTE PTR [eax],al
 8048517:	00 bf fe ff ff 0f    	add    BYTE PTR [edi+0xffffffe],bh
 804851d:	00 00                	add    BYTE PTR [eax],al
 804851f:	00 00                	add    BYTE PTR [eax],al
 8048521:	41                   	inc    ecx
 8048522:	0e                   	push   cs
 8048523:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 8048529:	4b                   	dec    ebx
 804852a:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
 804852d:	04 00                	add    al,0x0
 804852f:	00 38                	add    BYTE PTR [eax],bh
 8048531:	00 00                	add    BYTE PTR [eax],al
 8048533:	00 80 00 00 00 b8    	add    BYTE PTR [eax-0x48000000],al
 8048539:	fe                   	(bad)  
 804853a:	ff                   	(bad)  
 804853b:	ff 61 00             	jmp    DWORD PTR [ecx+0x0]
 804853e:	00 00                	add    BYTE PTR [eax],al
 8048540:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 8048543:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
 8048549:	87 03                	xchg   DWORD PTR [ebx],eax
 804854b:	43                   	inc    ebx
 804854c:	0e                   	push   cs
 804854d:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
 8048553:	83 05 4e 0e 30 02 48 	add    DWORD PTR ds:0x2300e4e,0x48
 804855a:	0e                   	push   cs
 804855b:	14 41                	adc    al,0x41
 804855d:	c3                   	ret    
 804855e:	0e                   	push   cs
 804855f:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
 8048562:	0e                   	push   cs
 8048563:	0c 41                	or     al,0x41
 8048565:	c7                   	(bad)  
 8048566:	0e                   	push   cs
 8048567:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
 804856a:	0e                   	push   cs
 804856b:	04 10                	add    al,0x10
 804856d:	00 00                	add    BYTE PTR [eax],al
 804856f:	00 bc 00 00 00 ec fe 	add    BYTE PTR [eax+eax*1-0x1140000],bh
 8048576:	ff                   	(bad)  
 8048577:	ff 02                	inc    DWORD PTR [edx]
 8048579:	00 00                	add    BYTE PTR [eax],al
 804857b:	00 00                	add    BYTE PTR [eax],al
 804857d:	00 00                	add    BYTE PTR [eax],al
	...

08048580 <__FRAME_END__>:
 8048580:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .init_array:

08049584 <__frame_dummy_init_array_entry>:
 8049584:	a0                   	.byte 0xa0
 8049585:	83                   	.byte 0x83
 8049586:	04 08                	add    al,0x8

Disassembly of section .fini_array:

08049588 <__do_global_dtors_aux_fini_array_entry>:
 8049588:	80                   	.byte 0x80
 8049589:	83                   	.byte 0x83
 804958a:	04 08                	add    al,0x8

Disassembly of section .jcr:

0804958c <__JCR_END__>:
 804958c:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .dynamic:

08049590 <_DYNAMIC>:
 8049590:	01 00                	add    DWORD PTR [eax],eax
 8049592:	00 00                	add    BYTE PTR [eax],al
 8049594:	01 00                	add    DWORD PTR [eax],eax
 8049596:	00 00                	add    BYTE PTR [eax],al
 8049598:	0c 00                	or     al,0x0
 804959a:	00 00                	add    BYTE PTR [eax],al
 804959c:	74 82                	je     8049520 <__FRAME_END__+0xfa0>
 804959e:	04 08                	add    al,0x8
 80495a0:	0d 00 00 00 64       	or     eax,0x64000000
 80495a5:	84 04 08             	test   BYTE PTR [eax+ecx*1],al
 80495a8:	19 00                	sbb    DWORD PTR [eax],eax
 80495aa:	00 00                	add    BYTE PTR [eax],al
 80495ac:	84 95 04 08 1b 00    	test   BYTE PTR [ebp+0x1b0804],dl
 80495b2:	00 00                	add    BYTE PTR [eax],al
 80495b4:	04 00                	add    al,0x0
 80495b6:	00 00                	add    BYTE PTR [eax],al
 80495b8:	1a 00                	sbb    al,BYTE PTR [eax]
 80495ba:	00 00                	add    BYTE PTR [eax],al
 80495bc:	88 95 04 08 1c 00    	mov    BYTE PTR [ebp+0x1c0804],dl
 80495c2:	00 00                	add    BYTE PTR [eax],al
 80495c4:	04 00                	add    al,0x0
 80495c6:	00 00                	add    BYTE PTR [eax],al
 80495c8:	f5                   	cmc    
 80495c9:	fe                   	(bad)  
 80495ca:	ff 6f 8c             	jmp    FWORD PTR [edi-0x74]
 80495cd:	81 04 08 05 00 00 00 	add    DWORD PTR [eax+ecx*1],0x5
 80495d4:	ec                   	in     al,dx
 80495d5:	81 04 08 06 00 00 00 	add    DWORD PTR [eax+ecx*1],0x6
 80495dc:	ac                   	lods   al,BYTE PTR ds:[esi]
 80495dd:	81 04 08 0a 00 00 00 	add    DWORD PTR [eax+ecx*1],0xa
 80495e4:	45                   	inc    ebp
 80495e5:	00 00                	add    BYTE PTR [eax],al
 80495e7:	00 0b                	add    BYTE PTR [ebx],cl
 80495e9:	00 00                	add    BYTE PTR [eax],al
 80495eb:	00 10                	add    BYTE PTR [eax],dl
 80495ed:	00 00                	add    BYTE PTR [eax],al
 80495ef:	00 15 00 00 00 00    	add    BYTE PTR ds:0x0,dl
 80495f5:	00 00                	add    BYTE PTR [eax],al
 80495f7:	00 03                	add    BYTE PTR [ebx],al
 80495f9:	00 00                	add    BYTE PTR [eax],al
 80495fb:	00 7c 96 04          	add    BYTE PTR [esi+edx*4+0x4],bh
 80495ff:	08 02                	or     BYTE PTR [edx],al
 8049601:	00 00                	add    BYTE PTR [eax],al
 8049603:	00 10                	add    BYTE PTR [eax],dl
 8049605:	00 00                	add    BYTE PTR [eax],al
 8049607:	00 14 00             	add    BYTE PTR [eax+eax*1],dl
 804960a:	00 00                	add    BYTE PTR [eax],al
 804960c:	11 00                	adc    DWORD PTR [eax],eax
 804960e:	00 00                	add    BYTE PTR [eax],al
 8049610:	17                   	pop    ss
 8049611:	00 00                	add    BYTE PTR [eax],al
 8049613:	00 64 82 04          	add    BYTE PTR [edx+eax*4+0x4],ah
 8049617:	08 11                	or     BYTE PTR [ecx],dl
 8049619:	00 00                	add    BYTE PTR [eax],al
 804961b:	00 5c 82 04          	add    BYTE PTR [edx+eax*4+0x4],bl
 804961f:	08 12                	or     BYTE PTR [edx],dl
 8049621:	00 00                	add    BYTE PTR [eax],al
 8049623:	00 08                	add    BYTE PTR [eax],cl
 8049625:	00 00                	add    BYTE PTR [eax],al
 8049627:	00 13                	add    BYTE PTR [ebx],dl
 8049629:	00 00                	add    BYTE PTR [eax],al
 804962b:	00 08                	add    BYTE PTR [eax],cl
 804962d:	00 00                	add    BYTE PTR [eax],al
 804962f:	00 fe                	add    dh,bh
 8049631:	ff                   	(bad)  
 8049632:	ff 6f 3c             	jmp    FWORD PTR [edi+0x3c]
 8049635:	82                   	(bad)  
 8049636:	04 08                	add    al,0x8
 8049638:	ff                   	(bad)  
 8049639:	ff                   	(bad)  
 804963a:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
 804963d:	00 00                	add    BYTE PTR [eax],al
 804963f:	00 f0                	add    al,dh
 8049641:	ff                   	(bad)  
 8049642:	ff 6f 32             	jmp    FWORD PTR [edi+0x32]
 8049645:	82                   	(bad)  
 8049646:	04 08                	add    al,0x8
	...

Disassembly of section .got:

08049678 <.got>:
 8049678:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .got.plt:

0804967c <_GLOBAL_OFFSET_TABLE_>:
 804967c:	90                   	nop
 804967d:	95                   	xchg   ebp,eax
 804967e:	04 08                	add    al,0x8
	...
 8049688:	b6 82                	mov    dh,0x82
 804968a:	04 08                	add    al,0x8
 804968c:	c6                   	.byte 0xc6
 804968d:	82                   	(bad)  
 804968e:	04 08                	add    al,0x8

Disassembly of section .data:

08049690 <__data_start>:
 8049690:	00 00                	add    BYTE PTR [eax],al
	...

08049694 <__dso_handle>:
 8049694:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .bss:

08049698 <__bss_start>:
 8049698:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 44 65 62          	sub    BYTE PTR [ebp+eiz*2+0x62],al
   9:	69 61 6e 20 34 2e 38 	imul   esp,DWORD PTR [ecx+0x6e],0x382e3420
  10:	2e 32 2d 31 36 29 20 	xor    ch,BYTE PTR cs:0x20293631
  17:	34 2e                	xor    al,0x2e
  19:	38 2e                	cmp    BYTE PTR [esi],ch
  1b:	32 00                	xor    al,BYTE PTR [eax]
